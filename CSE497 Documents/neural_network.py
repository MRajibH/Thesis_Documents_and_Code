# -*- coding: utf-8 -*-
"""Neural network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BQklawoW5Cc684l-d24l2f2XuIF9WQMy
"""


from sklearn.metrics import plot_confusion_matrix
from sklearn.metrics import confusion_matrix
import sklearn
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import numpy as np
from sklearn.neural_network import MLPClassifier
from sklearn.datasets import make_classification


data = pd.read_csv(
    r"C:\Users\lenovo\Desktop\Thesis\Dataset final\suicide_dataset_numeric.csv")


features = data.columns


features = [x for x in features if x != 'attempt_suicide' and x != 'Age']


train, test = train_test_split(data, test_size=0.3)
print(len(data))
print(len(train))
print(len(test))

x_train = train[features]
y_train = train["attempt_suicide"]

x_test = test[features]
y_test = test["attempt_suicide"]

clf = MLPClassifier(random_state=0, max_iter=100)

clf = clf.fit(x_train, y_train)

y_pred = clf.predict(x_test)

y_pred

score = accuracy_score(y_test, y_pred) * 100
print("Accuracy using Random forest: ", round(score, 1), "%")


score = confusion_matrix(y_test, y_pred)
print(score)

matrix = plot_confusion_matrix(clf, x_test, y_test)
